<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>proline-zero</artifactId>
    <version>2.3.3</version>
    <name>Proline-Zero</name>

    <parent>
        <groupId>fr.proline</groupId>
        <artifactId>profi-pom</artifactId>
        <version>1.2.0</version> <!-- Snapshot Trunk version -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <server.version>2.3.3</server.version>
        <seqrepo.version>2.3.3</seqrepo.version>
        <admin.version>2.3.2</admin.version>
        <studio.version>2.3.3</studio.version>
        <commons.version>1.2.0</commons.version>
        <hornetq.version>2.4.0.Final</hornetq.version>
        <dist.data>${project.basedir}/data/sample</dist.data>
        <pg.win.version>13.7-1_light</pg.win.version>
        <pg.linux.version>10.11-3</pg.linux.version>
        <h2.version>1.4.196</h2.version>
<!--        <converter.version>1.2.4</converter.version>  To be added ? -->
        <input.resources.directory>src/main/resources</input.resources.directory>
        <include.pattern>**/*.png</include.pattern>
    </properties>
    
    <dependencies>

    	<dependency>
    		<groupId>commons-beanutils</groupId>
    		<artifactId>commons-beanutils</artifactId>
    		<version>1.9.4</version>
		</dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.13.0</version>
        </dependency>
    	<dependency>
    		<groupId>org.apache.commons</groupId>
    		<artifactId>commons-configuration2</artifactId>
   			<version>2.10.1</version>
		</dependency>
        <dependency>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>zt-exec</artifactId>
            <version>1.12</version>
        </dependency>
        <dependency>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>zt-process-killer</artifactId>
            <version>1.10</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>fr.profi.util</groupId>
            <artifactId>profi-commons-java</artifactId>
            <version>${commons.version}</version>
        </dependency>

        <dependency>
            <groupId>com.dorkbox</groupId>
            <artifactId>SystemTray</artifactId>
            <version>4.1</version>
        </dependency>
        <dependency>
            <groupId>com.dorkbox</groupId>
            <artifactId>Utilities</artifactId>
            <version>1.25</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.11.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.typesafe/config -->
        <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>

        </dependency>
        <!-- Only use IconManager & DefaultDialog -->
        <dependency>
            <groupId>fr.proline</groupId>
            <artifactId>prolinestudio-commons</artifactId>
            <version>${studio.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>fr.proline</groupId>
            <artifactId>pm-sequence-repository</artifactId>
            <version>${seqrepo.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

    <build>

        <resources><!-- replace default properties for resources copy from resources to classes-->
            <resource>
                <directory>src/main/resources</directory>
                <!--Include only necessary files -->
                <includes>
                    <include>*.png</include>
                    <include>*.ico</include>
                    <include>logback.xml</include>
                    <include>proline_launcher.config</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            <mainClass>fr.proline.zero.Main</mainClass>
                            <useUniqueVersions>false</useUniqueVersions>
                        </manifest>
                    </archive>
                </configuration>

            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <!-- version inherited from ProFI-pom -->
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${input.resources.directory}</directory>
                                    <includes>
                                        <include>**/proline_launcher.sh</include>
                                        <include>${include.pattern}</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-script</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <overwrite>true</overwrite>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <includes>
                                        <include>**/${project.name}.sh</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Phase "package" Copy Jar and native dependencies to lib/ directory -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <!-- <version>2.10</version> -->
                <executions>
                    <execution>
                        <id>unpack-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeTypes>zip</includeTypes>
                            <outputDirectory>${project.build.directory}/${project.artifactId}-${project.version}
                            </outputDirectory>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>

                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeTypes>jar</includeTypes>
                            <!-- <includeArtifactIds>zt-exec,zt-process-killer,logback-classic,slf4j-api</includeArtifactIds> -->
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>

                </executions>

            </plugin>

            <!-- Build exe file -->
            <plugin>
                <groupId>com.akathist.maven.plugins.launch4j</groupId>
                <artifactId>launch4j-maven-plugin</artifactId>
                <version>2.1.1</version>
                <executions>
                    <execution>
                        <id>l4j-clui</id>
                        <phase>package</phase>
                        <goals>
                            <goal>launch4j</goal>
                        </goals>
                        <configuration>
                            <headerType>gui</headerType>
                            <outfile>${project.build.directory}/${project.name}.exe</outfile>
                            <jar>${project.build.directory}/${project.artifactId}-${project.version}.jar</jar>
                            <errTitle>${project.name}</errTitle>
                            <classPath>
                                <mainClass>fr.proline.zero.Main</mainClass>
                                <addDependencies>false</addDependencies>
                                <preCp>anything</preCp>
                            </classPath>
                            <icon>src/main/resources/logo48x48.ico</icon>
                            <jre>
                                <path>ProlineStudio-${studio.version}/jdk</path>
                            </jre>
                            <versionInfo>
                                <fileVersion>1.2.3.4</fileVersion>
                                <txtFileVersion>txt file version</txtFileVersion>
                                <fileDescription>a description</fileDescription>
                                <copyright>my copyright</copyright>
                                <productVersion>1.2.3.4</productVersion>
                                <txtProductVersion>txt product version</txtProductVersion>
                                <productName>${project.name}</productName>
                                <internalName>${project.artifactId}</internalName>
                                <originalFilename>${project.name}.exe</originalFilename>
                            </versionInfo>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Build Zip Assembly -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>assembly/assembly.xml</descriptor>
                    </descriptors>
                    <finalName>${project.name}-${project.version}</finalName>
                </configuration>
            </plugin>

        </plugins>
    </build>

    <profiles>
        <profile>
            <id>for-dev</id>
            <!-- This Profile should be set during development in order to be able to run Main from IntelliJ   -->
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <input.resources.directory>src/main/resources/dev-files</input.resources.directory>
                <include.pattern>**/*.*</include.pattern>
            </properties>
        </profile>
        <profile>
            <id>with-dependencies</id>
            <!-- This Profile should be set when all dependencies should be downloaded. typically when creating a distribution -->
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>fr.proline</groupId>
                    <artifactId>proline-cortex</artifactId>
                    <version>${server.version}</version>
                    <classifier>${os.classifier}</classifier>
                    <type>zip</type>
                    <exclusions>
                        <exclusion>
                            <groupId>*</groupId>
                            <artifactId>*</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>fr.proline</groupId>
                    <artifactId>proline-admin-gui</artifactId>
                    <version>${admin.version}</version>
                    <classifier>bin</classifier>
                    <type>zip</type>
                    <exclusions>
                        <exclusion>
                            <groupId>*</groupId>
                            <artifactId>*</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>fr.proline</groupId>
                    <artifactId>pm-sequence-repository</artifactId>
                    <version>${seqrepo.version}</version>
                    <classifier>bin</classifier>
                    <type>zip</type>
                    <exclusions>
                        <exclusion>
                            <groupId>*</groupId>
                            <artifactId>*</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>

                <dependency>
                    <groupId>fr.proline</groupId>
                    <artifactId>ProlineStudio</artifactId>
                    <version>${studio.version}</version>
                    <type>zip</type>
                    <classifier>${os.classifier}</classifier>
                    <exclusions>
                        <exclusion>
                            <groupId>*</groupId>
                            <artifactId>*</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>windows-x64_h2</id>
            <!-- This Profile should be set to create a distribution for Windows (64bits) using H2 as datastore   -->
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <os.classifier>windows-x64</os.classifier>
                <proline.datastore>h2</proline.datastore>
                <proline.datastore.port>9092</proline.datastore.port>
                <proline.launcher.executable>${project.name}.exe</proline.launcher.executable>
                <proline.launcher.executable.commandline></proline.launcher.executable.commandline>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>${h2.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <!-- This Profile should be set to create a distribution for Windows (64bits) using postgresql as datastore   -->
            <id>windows-x64_postgresql</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <os.classifier>windows-x64</os.classifier>
                <proline.datastore>postgresql</proline.datastore>
                <proline.datastore.port>5433</proline.datastore.port>
                <proline.launcher.executable>${project.name}.exe</proline.launcher.executable>
                <proline.launcher.executable.commandline></proline.launcher.executable.commandline>
            </properties>
            <dependencies>
                <!-- Add dependency to new converter ? -->
<!--                <dependency>-->
<!--                    <groupId>fr.profi</groupId>-->
<!--                    <artifactId>raw2mzdb</artifactId>-->
<!--                    <version>${raw2mzdb.version}</version>-->
<!--                    <classifier>windows-x64</classifier>-->
<!--                    <type>zip</type>-->
<!--                </dependency>-->
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>${pg.win.version}</version>
                    <type>zip</type>
                    <classifier>${os.classifier}</classifier>
                </dependency>
            </dependencies>
        </profile>
        <!--<profile>-->
        <!--<id>windows-x64_postgresql_sampledata</id>-->
        <!--<properties>-->
        <!--<os.classifier>windows-x64</os.classifier>-->
        <!--<proline.datastore>postgresql</proline.datastore>-->
        <!--<dist.data>${project.basedir}/data/sample</dist.data>-->
        <!--<proline.launcher.executable>${project.artifactId}.exe</proline.launcher.executable>-->
        <!--</properties>-->
        <!--<dependencies>-->
        <!--<dependency>-->
        <!--<groupId>org.postgresql</groupId>-->
        <!--<artifactId>postgresql</artifactId>-->
        <!--<version>${pg.win.version}</version>-->
        <!--<type>zip</type>-->
        <!--<classifier>${os.classifier}</classifier>-->
        <!--</dependency>-->
        <!--<dependency>-->
        <!--<groupId>fr.proline.samples</groupId>-->
        <!--<artifactId>pg_data</artifactId>-->
        <!--<version>2.0</version>-->
        <!--<type>zip</type>-->
        <!--<classifier>${os.classifier}</classifier>-->
        <!--</dependency>-->
        <!--</dependencies>-->
        <!--</profile>-->
        <profile>
            <id>linux-x64_h2</id>
            <!-- This Profile should be set to create a distribution for Linux (64bits) using H2 as datastore   -->
            <properties>
                <os.classifier>linux-x64</os.classifier>
                <proline.datastore>h2</proline.datastore>
                <proline.datastore.port>9092</proline.datastore.port>
                <proline.launcher.executable>${project.artifactId}-${project.version}.jar</proline.launcher.executable>
                <proline.launcher.executable.commandline>${project.name}.sh</proline.launcher.executable.commandline>                
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>${h2.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <!-- This Profile should be set to create a distribution for Linux (64bits) using postgresql as datastore   -->
            <id>linux-x64_postgresql</id>
            <properties>
                <os.classifier>linux-x64</os.classifier>
                <proline.datastore>postgresql</proline.datastore>
                <proline.datastore.port>5433</proline.datastore.port>
                <proline.launcher.executable>${project.artifactId}-${project.version}.jar</proline.launcher.executable>
                <proline.launcher.executable.commandline>${project.name}.sh</proline.launcher.executable.commandline>  
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>${pg.linux.version}</version>
                    <type>zip</type>
                    <classifier>${os.classifier}</classifier>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
